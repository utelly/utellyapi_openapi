openapi: 3.0.0
info:
  title: interaction_manager
  version: v1
  description: Interactions base API
servers:
  - description: prod
    url: 'https://services.utelly.com/interaction_manager/v1'
  - description: staging
    url: 'https://staging-services.utelly.com/interaction_manager/v1'
  - description: dev
    url: 'https://dev-services.utelly.com/interaction_manager/v1'
paths:
  /interactions:
    parameters: []
    get:
      summary: List all Interactions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interaction'
              examples:
                '1':
                  value:
                    - platform: ios
                      discover_guid: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
                      type: bookmark
                      created_at: '2019-08-24T14:15:22Z'
                      user:
                        id: string
                        source: string
                      entity:
                        id: string
                        source: string
                        type: movie
      operationId: v1.interaction.get
      parameters:
        - $ref: '#/components/parameters/user_param'
        - $ref: '#/components/parameters/entity_param'
    post:
      summary: Create one or more interactions
      operationId: v1.interaction.post
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Interaction'
            examples:
              '1':
                value:
                  - platform: ios
                    discover_guid: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
                    type: bookmark
                    created_at: '2019-08-24T14:15:22Z'
                    user:
                      id: string
                      source: string
                    entity:
                      id: string
                      source: string
                      type: movie
components:
  schemas:
    Interaction:
      title: Interaction
      x-examples: {}
      description: 'This model represents the interaction between a user and an object (creative works, people, tags, etc...).'
      allOf:
        - anyOf:
            - $ref: '#/components/schemas/interaction_bookmark'
            - $ref: '#/components/schemas/interaction_play'
            - $ref: '#/components/schemas/interaction_view'
            - $ref: '#/components/schemas/interaction_buy_rent'
            - $ref: '#/components/schemas/interaction_rate'
        - type: object
          additionalProperties: false
          properties:
            created_at:
              type: string
              pattern: '(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})Z'
              format: date-time
            user:
              $ref: '#/components/schemas/user_object'
            entity:
              $ref: '#/components/schemas/entity_object'
          required:
            - created_at
            - user
            - entity
    entity_type:
      type: string
      enum:
        - movie
        - series
        - tv program
        - podcast
        - website
        - person
        - location
        - tag
        - other
        - trailer
        - video
        - page
      title: entity type
    interaction_type:
      type: string
      title: interaction_type
      enum:
        - bookmark
        - rate
        - view
        - buy
        - rent
        - play
      x-examples: {}
    interaction_bookmark:
      title: interaction_bookmark
      type: object
      additionalProperties: false
      description: 'General purpose object to collect info that is very context dependant, esp of the type of interaction we record'
      x-examples: {}
      properties:
        platform:
          $ref: '#/components/schemas/platform_type'
        discover_guid:
          type: string
          description: A guid to tie back the interaction to recommended content
          example: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
        type:
          type: string
          enum:
            - bookmark
      required:
        - type
    interaction_rate:
      title: interaction_rate
      type: object
      additionalProperties: false
      description: 'Generalpurpose object to collect info that is very context dependant, esp of the type of interaction we record'
      x-examples: {}
      properties:
        platform:
          $ref: '#/components/schemas/platform_type'
        rating:
          type: number
          multipleOf: 0.1
          minimum: -1
          maximum: 1
          format: float
          description: A rating associated with the interaction
          example: 0
        discover_guid:
          type: string
          description: A guid to tie back the interaction to recommended content
          example: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
        type:
          type: string
          enum:
            - rate
      required:
        - platform
        - type
    interaction_view:
      title: interaction_view
      type: object
      additionalProperties: false
      description: 'Generalpurpose object to collect info that is very context dependant, esp of the type of interaction we record'
      x-examples: {}
      properties:
        platform:
          $ref: '#/components/schemas/platform_type'
        discover_guid:
          type: string
          description: A guid to tie back the interaction to recommended content
          example: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
        type:
          type: string
          enum:
            - view
      required:
        - type
    interaction_play:
      title: interaction_play
      type: object
      additionalProperties: false
      description: 'Generalpurpose object to collect info that is very context dependant, esp of the type of interaction we record'
      x-examples: {}
      properties:
        platform:
          $ref: '#/components/schemas/platform_type'
        duration_secs:
          type: integer
          minimum: 0
          description: 'How long did the interaction last, in seconds?'
        discover_guid:
          type: string
          description: A guid to tie back the interaction to recommended content
          example: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
        type:
          type: string
          enum:
            - play
      required:
        - type
    interaction_buy_rent:
      title: interaction_buy_rent
      type: object
      additionalProperties: false
      description: 'Generalpurpose object to collect info that is very context dependant, esp of the type of interaction we record'
      x-examples: {}
      properties:
        platform:
          $ref: '#/components/schemas/platform_type'
        value:
          type: number
          format: float
          minimum: 0
          description: A value associated with the interaction.
        discover_guid:
          type: string
          description: A guid to tie back the interaction to recommended content
          example: 5e987e47-7ed0-4442-a3bb-e3aeacd4840c
        quantity:
          type: number
          format: float
          description: 'quantity of object(s) interacted with. For instance, user bought 2 tickets for a movie.'
        type:
          type: string
          enum:
            - buy
            - rent
      required:
        - type
    platform_type:
      type: string
      title: platform_type
      enum:
        - ios
        - android
        - web
        - chromecast
        - firetv
        - roku
        - ctv_samsung
        - ctv_lg
        - ctv_sony
        - ctv_philips
        - ctv_panasonic
        - ctv_hisense
        - ctv_xiaomi
        - ctv_other
        - stb_other
        - stb_youview
        - stb_virginmedia
        - stv_sky
        - stb_freeview
        - stb_freesat
    user_object:
      additionalProperties: true
      type: object
      title: user
      properties:
        id:
          type: string
        source:
          type: string
      required:
        - id
        - source
    entity_object:
      title: entity
      type: object
      additionalProperties: false
      x-examples: {}
      properties:
        id:
          type: string
        source:
          type: string
        type:
          $ref: '#/components/schemas/entity_type'
      required:
        - id
        - source
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
      x-apikeyInfoFunc: security.check_token
  parameters:
    user_param:
      name: user
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/user_object'
      style: deepObject
      explode: true
    entity_param:
      name: entity
      in: query
      schema:
        $ref: '#/components/schemas/entity_object'
      style: deepObject
      explode: true
      required: false
security:
  - Authorization: []
